version: '3'

env:
  KCFLAGS: "{{.ADDITIONAL_CLANG_FLAGS}} {{.ADDITIONAL_KCFLAGS}}"
  ADDITIONAL_KBUILD_LDFLAGS: "{{.ADDITIONAL_KBUILD_LDFLAGS}}"
  ADDITIONAL_KBUILD_VMLINUX_OBJS: "{{.ADDITIONAL_KBUILD_VMLINUX_OBJS}}"

tasks:
  make:
    desc: compile the linux kernel to create the final image
    cmds:
      - |
        cd {{.KERNEL}} && make -j${NPROC} \
          LLVM=1 LLVM_IAS=1 \
          CC={{.CLANG}} \
          LD={{.LD}} \
          AR={{.LLVM_AR}} \
          NM={{.LLVM_NM}} \
          STRIP={{.LLVM_STRIP}} \
          OBJCOPY={{.LLVM_OBJCOPY}} \
          OBJDUMP={{.LLVM_OBJDUMP}} \
          READELF={{.LLVM_READELF}} \
          HOSTCC={{.CLANG}} \
          HOSTCXX={{.CXX}} \
          HOSTAR={{.LLVM_AR}} \
          HOSTLD={{.LD}} \
          KCFLAGS="{{.KCFLAGS}}" \
          ADDITIONAL_CFLAGS_KASAN="{{.ADDITIONAL_CFLAGS_KASAN}}" \
          ADDITIONAL_KBUILD_LDFLAGS="{{.ADDITIONAL_KBUILD_LDFLAGS}}" \
          ADDITIONAL_KBUILD_VMLINUX_OBJS="{{.ADDITIONAL_KBUILD_VMLINUX_OBJS}}" \
          -f {{.ROOT}}/Makefile.kernel \
          {{.CLI_ARGS}}

  bzImage:
    desc: compile the linux kernel to create the final image
    cmds:
      - task: make
        vars: {CLI_ARGS: "bzImage"}

  clean:
    desc: clean kernel
    cmds:
      - task: make
        vars: {CLI_ARGS: "clean"}

  clean-all:
    desc: clean kernel and generated files (e.g., header files required by static libs)
    cmds:
      - task: make
        vars: {CLI_ARGS: "mrproper"}

  clean-bzImage:
    desc: clean bzImage to trigger recreation once vmlinux got replaced
    cmds:
      - cd {{.KERNEL}} && rm -rf arch/x86/boot/bzImage arch/x86/boot/setup.bin arch/x86/boot/vmlinux.bin arch/x86/boot/zoffset.h arch/x86/boot/compressed/vmlinux arch/x86/boot/compressed/vmlinux.bin vmlinux vmlinux.o .thinlto-cache

  configure:
    desc: apply custom kernel config required
    cmds:
      - task: make
        vars: {CLI_ARGS: "defconfig"}
      # disable KASLR
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_RANDOMIZE_BASE
      # ENABLE LTO
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_LTO_NONE
      # disable thinLTO for now
      # - cd {{.KERNEL}} && scripts/config --enable CONFIG_LTO_CLANG_THIN
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_LTO_CLANG_FULL
      - \[ -z "$ENABLE_GDB_BUILD" \] || task kernel:config-gdb-build
      - \[ -z "$ENABLE_KASAN" \] ||     task kernel:config-kasan
      - \[ -z "$ENABLE_DEBUG" \] ||     task kernel:config-debug
      - \[ -z "$ENABLE_SYZKALLER" \] || task kernel:config-syzkaller
      - task: make
        vars: {CLI_ARGS: "modules_prepare"}

  configure-from-config-file:
    desc: apply custom kernel config from a .config file set from KERNEL_CONFIG
    cmds:
      - cp {{.KERNEL_CONFIG}} {{.KERNEL}}/.config
      - task: make
        vars: {CLI_ARGS: "modules_prepare"}

  config:
    desc: apply custom kernel config required
    cmds:
      - if \[ -n "$KERNEL_CONFIG" \]; then task kernel:configure-from-config-file; else task kernel:configure; fi

  config-gdb-build:
      # Kernel debugging (see https://stackoverflow.com/a/65526544)
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_X86_X2APIC
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_X86_LOCAL_APIC
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_HYPERVISOR_GUEST
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_KVM_GUEST
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_PARAVIRT
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_HAVE_STATIC_CALL

  config-kasan:
    cmds:
      # disable VMAP_STACK
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_VMAP_STACK
      # enable KASAN
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_KASAN
      # echo "# CONFIG_KASAN_EXTRA is not set" >> ${KERNEL}/.config
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_KASAN_EXTRA
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_KASAN_OUTLINE
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_KASAN_INLINE
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_TEST_KASAN
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_KASAN_VMALLOC
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_KASAN_MODULE_TEST
      - \[ -z "$ENABLE_KASAN_STACK" \] ||     task kernel:config-kasan-stack
      - \[ -n "$ENABLE_KASAN_STACK" \] || (cd {{.KERNEL}} && scripts/config --disable CONFIG_KASAN_STACK_ENABLE)
      - \[ -n "$ENABLE_KASAN_STACK" \] || (cd {{.KERNEL}} && scripts/config --disable CONFIG_KASAN_STACK)

  config-kasan-stack:
    cmds:
      # if compiling with clang, kernel disables KASAN stack instrumentation by default because of stack size issues
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_KASAN_STACK
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_KASAN_STACK_ENABLE
      - cd {{.KERNEL}} && scripts/config --set-val CONFIG_STACK_HASH_ORDER 20

  config-debug:
    cmds:
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_DEBUG_INFO
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_DEBUG_INFO_REDUCED
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_DEBUG_INFO_COMPRESSED
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_DEBUG_INFO_SPLIT
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_DEBUG_INFO_DWARF4
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_DEBUG_INFO_DWARF5
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_GDB_SCRIPTS
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT

  config-syzkaller:
    cmds:
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_KCOV
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_KCOV_INSTRUMENT_ALL
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_KCOV_ENABLE_COMPARISONS
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_CONFIGFS_FS
      - cd {{.KERNEL}} && scripts/config --enable CONFIG_SECURITYFS
      # additional configs for CONFIGFS_FS and CONFIG_SECURITYFS
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_NVME_TARGET
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_NETCONSOLE_DYNAMIC
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_OCFS2_FS
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_DLM
      - cd {{.KERNEL}} && scripts/config --set-val CONFIG_KCOV_IRQ_AREA_SIZE 0x40000
      - cd {{.KERNEL}} && scripts/config --disable CONFIG_MOST
